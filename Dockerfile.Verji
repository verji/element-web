# Builder
FROM node:20-bullseye as builder

# Support custom branches of the react-sdk and js-sdk. This also helps us build
# images of element-web develop.
ARG USE_CUSTOM_SDKS=true
ARG REACT_SDK_REPO
ARG REACT_SDK_BRANCH="verji-develop"
ARG JS_SDK_REPO
ARG JS_SDK_BRANCH="verji-develop"
ARG MODULE_API_REPO
ARG MODULE_API_BRANCH="verji-main"
ARG GITHUB_TOKEN="test"

ARG BUILD_ID

RUN apt-get update && apt-get install -y git dos2unix
RUN echo "My build ID:" ${BUILD_ID}

WORKDIR /src

COPY . /src

#Create .npmrc file
RUN echo '@verji:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' >> .npmrc
RUN cat .npmrc
# Include the verji modules in the build (rename verji build_config.yaml)
RUN mv build_config.verji.yaml build_config.yaml
RUN cat build_config.yaml

RUN dos2unix /src/scripts/docker-link-repos.sh && bash /src/scripts/docker-link-repos.sh
RUN dos2unix /src/scripts/docker-link-module-api.sh && bash /src/scripts/docker-link-module-api.sh
RUN yarn --network-timeout=200000 install
RUN yarn build

RUN dos2unix /src/scripts/docker-package.sh && bash /src/scripts/docker-package.sh "$BUILD_ID"

# Copy the config now so that we don't create another layer in the app image
RUN cp /src/config.sample.json /src/webapp/config.json

# App
FROM nginx:alpine-slim

COPY --from=builder /src/webapp /app

# Override default nginx config
COPY /nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

RUN rm -rf /usr/share/nginx/html \
  && ln -s /app /usr/share/nginx/html
